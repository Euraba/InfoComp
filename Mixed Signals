#include <bits/stdc++.h>
 
int const nmax = 300;
 
int question (int x1, int x2, int x3 = 0) {
        if (x3 == 0) {
                std::cout << 1 << " " << 2 << " " << x1 << " " << x2 << '\n';
                std::cout.flush();
                int val;
                std::cin >> val;
                return val;
        } else {
                std::cout << 1 << " " << 3 << " " << x1 << " " << x2 << " " << x3 <<  '\n';
                std::cout.flush();
                int val;
                std::cin >> val;
                return val;
        }
}
 
int val;
int sol[1 + nmax];
 
void solve() {
        int n;
        std::cin >> n;
        int x, y, relation;
        while (true) {
                x = rand() % n + 1;
                y = rand() % n + 1;
                if (x != y) {
                        relation = question (x, y);
                        if (relation != 2)
                        { break; }
                }
        }
        sol[x] = sol[y] = -1;
        for (int i = 1; i <= n; i++) {
                if (i != x && i != y) {
                        sol[i] = question (i, x, y);
                        if (sol[i] != 2) {
                                sol[i] ^= relation;
                                if (sol[x] == -1) {
                                        sol[x] = question (x, i) ^ sol[i];
                                        sol[y] = relation ^ sol[x];
                                }
                        }
                }
        }
 
        std::cout << 0 << " ";
        for (int i = 1; i <= n; i++) {
                std::cout << sol[i] << " " ;
        }
        std::cout << '\n';
}
 
int main() {
        srand (time(0));
        int t;
        std::cin >> t;
        for (int testcase = 1; testcase <= t; testcase++) {
                solve();
        }
}
